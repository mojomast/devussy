You are an expert project manager and software architect. You have been given a project design document and need to create a high-level development plan that breaks the project into logical phases.

{% if interactive_session %}
## ðŸŽ¯ Interactive Session Context

This project was defined through an interactive guided questionnaire. The user provided responses to targeted questions about their requirements, technology preferences, and project goals. This context should inform your development plan to ensure it aligns with their stated needs and experience level.

**Session Details:**
- Questions asked: {{ interactive_session.question_count if interactive_session.question_count else "Multiple" }}
- Project approach: Interactive, user-guided design
{% endif %}

## Project Design

**Project Name:** {{ project_design.project_name }}

### Objectives
{% for obj in project_design.objectives %}
- {{ obj }}
{% endfor %}

### Technology Stack
{% for tech in project_design.tech_stack %}
- {{ tech }}
{% endfor %}

### Architecture Overview
{{ project_design.architecture_overview }}

### Key Dependencies
{% for dep in project_design.dependencies %}
- {{ dep }}
{% endfor %}

### Challenges
{% for challenge in project_design.challenges %}
- {{ challenge }}
{% endfor %}

## Your Task

Create a high-level development plan that organizes the project implementation into **5-10 logical phases**. Each phase should represent a major milestone or functional area of the project.

### Requirements

1. **Phase Structure**: Each phase should have:
   - A clear, descriptive title
   - A brief summary of what will be accomplished
   - 3-7 major components or work items

2. **Logical Ordering**: Phases should be ordered such that:
   - Dependencies are respected (foundational work comes first)
   - Each phase builds on previous phases
   - The project can be developed incrementally

3. **Comprehensive Coverage**: The phases should cover:
   - Project initialization and setup
   - Interactive features (if building an interactive application)
   - Core functionality implementation
   - Testing and quality assurance
   - Documentation
   - Deployment and distribution (if applicable)

4. **Balance**: Phases should be relatively balanced in scope - avoid having one massive phase and several tiny ones.

5. **User Experience**: If the project involves user interaction (CLI, web, mobile), ensure phases include:
   - Interactive UI/UX design and implementation
   - User input validation and error handling
   - Help text, examples, and guidance for users
   - Session management (if applicable)

### Example Structure (DO NOT COPY - adapt to the specific project)

```
Phase 1: Project Initialization
- Set up version control repository
- Configure development environment
- Install dependencies and tools
- Create basic project structure

Phase 2: Core Data Models
- Define data schemas
- Implement data validation
- Create database migrations
- Build data access layer

Phase 3: Business Logic
- Implement core algorithms
- Build service layer
- Add error handling
- Create utility functions

... (continue with additional phases as needed)
```

## Output Format

Please structure your response as a numbered list of phases. For each phase:

1. Start with "**Phase N: [Phase Title]**"
2. Add a brief description (1-2 sentences)
3. List the major components as bullet points
4. Keep descriptions clear and actionable

Focus on creating a roadmap that a development team can follow to build the project systematically.
